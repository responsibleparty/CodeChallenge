{"remainingRequest":"/Users/ceciliatu/dev/CodeChallenge/node_modules/babel-loader/lib/index.js!/Users/ceciliatu/dev/CodeChallenge/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ceciliatu/dev/CodeChallenge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ceciliatu/dev/CodeChallenge/src/components/StudentInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ceciliatu/dev/CodeChallenge/src/components/StudentInfo.vue","mtime":1574448345522},{"path":"/Users/ceciliatu/dev/CodeChallenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ceciliatu/dev/CodeChallenge/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ceciliatu/dev/CodeChallenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ceciliatu/dev/CodeChallenge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StudentInfo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div style=\"margin:10px\">\n        <h2>Student Performance</h2>\n        <div class=\"form-inline\" role=\"form\" style=\"flex-flow:row nowrap\">\n            <div class=\"form-group mb1\">\n                <label v-bind:for=\"'name'\" class=\"sr-only\">Name</label>\n                <input v-bind:type=\"'text'\" maxlength=\"20\" v-bind:id=\"'name'\" v-bind:name=\"'name'\" class=\"form-control\" v-bind:class=\"getValidationClass('name')\" v-bind:placeholder=\"'Enter Name'\" v-model=\"formData['name']\"/>\n            </div>\n            <div class=\"form-group mb2\" v-for=\"(subject,index) in subjects\" v-bind:key=\"index\">\n                <label v-bind:for=\"subject\" class=\"sr-only\">{{subject}}</label>\n                <input v-bind:type=\"'text'\" maxlength=\"1\" v-bind:id=\"subject\" v-bind:name=\"subject\" class=\"form-control\" v-bind:class=\"getValidationClass(subject)\" v-bind:placeholder=\"'Enter '+subject\" v-model=\"formData[subject]\"/>\n            </div>\n            <div class=\"form-group mb1\">\n                <button type=\"button\" :disabled='!isFormValid()' class=\"btn btn-primary\" @click=\"addStudent\">Add Student</button>\n            </div>        \n        </div>\n        <table class=\"table table-striped table-dark\">\n        <thead>\n            <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\" v-for=\"(subject,index) in subjects\" v-bind:key=\"index\">{{subject}}</th>\n            <th scope=\"col\">GPA</th>\n            <th></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(student,index) in students\" v-bind:key=\"student._id\" v-bind:class=\"getBestWorstClasses(student)\">\n            <th scope=\"row\">{{index+1}}</th>\n            <td>{{student.name}}</td>\n            <td scope=\"row\" v-for=\"(subject,index) in subjects\" v-bind:key=\"index\">{{student.gradeMap[subject]}}</td>\n            <td>{{student.gpa}}</td>\n            <td><button @click=\"removeStudent(student._id)\">Remove</button></td>\n            </tr>\n        </tbody>\n        </table>\n    </div>\n</template>\n\n<style>\n    tr.best-gpa > td, tr.best-gpa > th {\n        color: black;\n    }\n\n    tr.worst-gpa > td, tr.worst-gpa > th {\n        color:black;\n    }\n\n    .form-inline .form-group {\n        flex: 1 1 auto;\n        margin:10px;\n    }\n\n    .form-inline .form-control {\n        width: 100%;\n    }\n\n    .form-group button {\n        white-space: nowrap;\n    }\n\n    @media (min-width: 576px) {\n         .form-inline .form-control {\n            width: 100%;\n        }   \n    }\n</style>\n\n<script>\n\nlet extractGrade = (gradeDescription) => {\n          let gradeMap = {\n              A: 4,\n              B: 3,\n              C: 2,\n              D: 1,\n              F: 0 \n          }\n          let index = gradeDescription.length - 1\n          return gradeMap[gradeDescription.charAt(index)]\n      }\n\nlet calculateGPA = (grades) => {\n    let total = 0;\n    grades.forEach( grade => {\n        total += extractGrade(grade);\n    })\n    return total / grades.length\n}\n\nlet getGradeMap = (grades) => {\n          let map = {}\n          grades.forEach( gradeDesc => {\n            const end = gradeDesc.indexOf(\" \")\n            const subject = gradeDesc.substring(0,end)\n            const grade = gradeDesc.charAt(gradeDesc.length - 1)\n            map[subject] = grade\n          })\n\n          return map\n        //   return {\n        //       Math: 'A',\n        //       History: 'B',\n        //       Science: 'A',\n        //       English: 'B'\n        //   }\n}\n\nlet toSimplifiedStudent = (student) => {\n    return {\n        _id: student._id,\n        name: student.name,\n        gpa: calculateGPA(student.grades),\n        gradeMap: getGradeMap(student.grades)\n    }\n}\n\nexport default {\n  name: \"StudentInfo\",\n  methods: {\n      getBestWorstClasses: function(student) {\n          if(this.isBestGPA(student.gpa) && this.isWorstGPA(student.gpa)) {\n              return ''\n          } else if(this.isBestGPA(student.gpa)) {\n             return 'best-gpa bg-success'\n          } else if (this.isWorstGPA(student.gpa)){\n             return 'worst-gpa bg-danger'\n          }\n        \n      },\n      getValidationClass: function(column) {\n        return !this.isPristine(this.formData[column]) ? (this.validateInputType(column, this.formData[column]) ? 'is-valid' : 'is-invalid') : ''\n      },\n      isPristine: function(value) {\n          return value == null\n      },\n      isValidGrade: function(value) {\n          return ['A','B','C','D','F'].indexOf(value.toUpperCase()) > -1\n      },\n      isValidName: function(value) {\n          return value !== ''\n      },\n      validateInputType : function(key, value) {\n        return key === \"name\" ? this.isValidName(value) : this.isValidGrade(value)\n      },\n      isFormValid: function() {\n          let isValid = true;\n          \n          [\"name\"].concat(this.subjects).forEach( key => {\n                let value = this.formData[key]\n                isValid = isValid && !this.isPristine(value) && this.validateInputType(key, value)\n          })\n          return isValid\n      },\n      isBestGPA: function(gpa) {\n          return gpa === this.bestGPA\n      },\n      isWorstGPA: function(gpa) {\n          return gpa === this.worstGPA\n      },\n      resetBestAndWorst: function(){\n          this.bestGPA = 0\n          this.worstGPA = 4\n      },\n      persistBestAndWorst: function(gpa) {\n        if(gpa > this.bestGPA ) {\n            this.bestGPA = gpa\n        }\n        if(gpa < this.worstGPA ) {\n            this.worstGPA = gpa\n        }\n      },\n      makeStudent: function(formData) {\n          const formattedGrades = this.subjects.map( subject => `${subject} - ${formData[subject].toUpperCase()}`)\n          return {\n              _id : this.students.length + 1,\n              name: formData.name,\n              gpa: calculateGPA(formattedGrades),\n              gradeMap :getGradeMap(formattedGrades)\n          }\n      },\n      addStudent: function() {\n          const student = this.makeStudent(this.formData)\n          this.students.push(student)\n          this.persistBestAndWorst(student.gpa)\n      },\n      removeStudent: function(id) {\n          this.students = this.students.filter(student => student._id !== id)\n          this.resetBestAndWorst()\n          this.students.map( student => this.persistBestAndWorst(student.gpa) )\n      }\n  },\n  data: () => ({\n    formData: {name:null, Math: null, History: null, Science: null, English: null},\n    subjects: ['Math', 'History', 'Science', 'English'],\n    bestGPA: 0,\n    worstGPA: 4,\n    students: [\n      {\n        _id: 1,\n        name: \"Adam\",\n        grades: [\"Math - A\", \"History - B\", \"Science - A\", \"English - B\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"M\",\n        birthday: \"July 23, 2003\",\n        athlete: true,\n        grade: 10\n      },\n      {\n        _id: 2,\n        name: \"John\",\n        grades: [\"Math - B\", \"History - B\", \"Science - B\", \"English - B\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"M\",\n        birthday: \"September 8, 2005\",\n        athlete: false,\n        grade: 8\n      },\n      {\n        _id: 3,\n        name: \"Sarah\",\n        grades: [\"Math - C\", \"History - B\", \"Science - B\", \"English - C\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"F\",\n        birthday: \"January 17, 2004\",\n        athlete: false,\n        grade: 9\n      },\n      {\n        _id: 4,\n        name: \"Katie\",\n        grades: [\"Math - D\", \"History - B\", \"Science - C\", \"English - B\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"F\",\n        birthday: \"October 6, 2005\",\n        athlete: true,\n        grade: 8\n      },\n      {\n        _id: 5,\n        name: \"Phil\",\n        grades: [\"Math - F\", \"History - B\", \"Science - C\", \"English - D\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"M\",\n        birthday: \"August 13, 2001\",\n        athlete: false,\n        grade: 12\n      }\n    ].map( student => toSimplifiedStudent(student))\n  }),\n  created: function () {\n    this.students.forEach( student => this.persistBestAndWorst(student.gpa))\n  },\n  props: {}\n};\n</script>\n\n<style scoped>\n</style>"],"sourceRoot":"src/components"}]}