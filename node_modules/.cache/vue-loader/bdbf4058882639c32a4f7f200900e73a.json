{"remainingRequest":"/Users/ceciliatu/dev/code-challenge/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ceciliatu/dev/code-challenge/src/components/StudentInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ceciliatu/dev/code-challenge/src/components/StudentInfo.vue","mtime":1574448345522},{"path":"/Users/ceciliatu/dev/code-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ceciliatu/dev/code-challenge/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ceciliatu/dev/code-challenge/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ceciliatu/dev/code-challenge/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgpsZXQgZXh0cmFjdEdyYWRlID0gKGdyYWRlRGVzY3JpcHRpb24pID0+IHsKICAgICAgICAgIGxldCBncmFkZU1hcCA9IHsKICAgICAgICAgICAgICBBOiA0LAogICAgICAgICAgICAgIEI6IDMsCiAgICAgICAgICAgICAgQzogMiwKICAgICAgICAgICAgICBEOiAxLAogICAgICAgICAgICAgIEY6IDAgCiAgICAgICAgICB9CiAgICAgICAgICBsZXQgaW5kZXggPSBncmFkZURlc2NyaXB0aW9uLmxlbmd0aCAtIDEKICAgICAgICAgIHJldHVybiBncmFkZU1hcFtncmFkZURlc2NyaXB0aW9uLmNoYXJBdChpbmRleCldCiAgICAgIH0KCmxldCBjYWxjdWxhdGVHUEEgPSAoZ3JhZGVzKSA9PiB7CiAgICBsZXQgdG90YWwgPSAwOwogICAgZ3JhZGVzLmZvckVhY2goIGdyYWRlID0+IHsKICAgICAgICB0b3RhbCArPSBleHRyYWN0R3JhZGUoZ3JhZGUpOwogICAgfSkKICAgIHJldHVybiB0b3RhbCAvIGdyYWRlcy5sZW5ndGgKfQoKbGV0IGdldEdyYWRlTWFwID0gKGdyYWRlcykgPT4gewogICAgICAgICAgbGV0IG1hcCA9IHt9CiAgICAgICAgICBncmFkZXMuZm9yRWFjaCggZ3JhZGVEZXNjID0+IHsKICAgICAgICAgICAgY29uc3QgZW5kID0gZ3JhZGVEZXNjLmluZGV4T2YoIiAiKQogICAgICAgICAgICBjb25zdCBzdWJqZWN0ID0gZ3JhZGVEZXNjLnN1YnN0cmluZygwLGVuZCkKICAgICAgICAgICAgY29uc3QgZ3JhZGUgPSBncmFkZURlc2MuY2hhckF0KGdyYWRlRGVzYy5sZW5ndGggLSAxKQogICAgICAgICAgICBtYXBbc3ViamVjdF0gPSBncmFkZQogICAgICAgICAgfSkKCiAgICAgICAgICByZXR1cm4gbWFwCiAgICAgICAgLy8gICByZXR1cm4gewogICAgICAgIC8vICAgICAgIE1hdGg6ICdBJywKICAgICAgICAvLyAgICAgICBIaXN0b3J5OiAnQicsCiAgICAgICAgLy8gICAgICAgU2NpZW5jZTogJ0EnLAogICAgICAgIC8vICAgICAgIEVuZ2xpc2g6ICdCJwogICAgICAgIC8vICAgfQp9CgpsZXQgdG9TaW1wbGlmaWVkU3R1ZGVudCA9IChzdHVkZW50KSA9PiB7CiAgICByZXR1cm4gewogICAgICAgIF9pZDogc3R1ZGVudC5faWQsCiAgICAgICAgbmFtZTogc3R1ZGVudC5uYW1lLAogICAgICAgIGdwYTogY2FsY3VsYXRlR1BBKHN0dWRlbnQuZ3JhZGVzKSwKICAgICAgICBncmFkZU1hcDogZ2V0R3JhZGVNYXAoc3R1ZGVudC5ncmFkZXMpCiAgICB9Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU3R1ZGVudEluZm8iLAogIG1ldGhvZHM6IHsKICAgICAgZ2V0QmVzdFdvcnN0Q2xhc3NlczogZnVuY3Rpb24oc3R1ZGVudCkgewogICAgICAgICAgaWYodGhpcy5pc0Jlc3RHUEEoc3R1ZGVudC5ncGEpICYmIHRoaXMuaXNXb3JzdEdQQShzdHVkZW50LmdwYSkpIHsKICAgICAgICAgICAgICByZXR1cm4gJycKICAgICAgICAgIH0gZWxzZSBpZih0aGlzLmlzQmVzdEdQQShzdHVkZW50LmdwYSkpIHsKICAgICAgICAgICAgIHJldHVybiAnYmVzdC1ncGEgYmctc3VjY2VzcycKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5pc1dvcnN0R1BBKHN0dWRlbnQuZ3BhKSl7CiAgICAgICAgICAgICByZXR1cm4gJ3dvcnN0LWdwYSBiZy1kYW5nZXInCiAgICAgICAgICB9CiAgICAgICAgCiAgICAgIH0sCiAgICAgIGdldFZhbGlkYXRpb25DbGFzczogZnVuY3Rpb24oY29sdW1uKSB7CiAgICAgICAgcmV0dXJuICF0aGlzLmlzUHJpc3RpbmUodGhpcy5mb3JtRGF0YVtjb2x1bW5dKSA/ICh0aGlzLnZhbGlkYXRlSW5wdXRUeXBlKGNvbHVtbiwgdGhpcy5mb3JtRGF0YVtjb2x1bW5dKSA/ICdpcy12YWxpZCcgOiAnaXMtaW52YWxpZCcpIDogJycKICAgICAgfSwKICAgICAgaXNQcmlzdGluZTogZnVuY3Rpb24odmFsdWUpIHsKICAgICAgICAgIHJldHVybiB2YWx1ZSA9PSBudWxsCiAgICAgIH0sCiAgICAgIGlzVmFsaWRHcmFkZTogZnVuY3Rpb24odmFsdWUpIHsKICAgICAgICAgIHJldHVybiBbJ0EnLCdCJywnQycsJ0QnLCdGJ10uaW5kZXhPZih2YWx1ZS50b1VwcGVyQ2FzZSgpKSA+IC0xCiAgICAgIH0sCiAgICAgIGlzVmFsaWROYW1lOiBmdW5jdGlvbih2YWx1ZSkgewogICAgICAgICAgcmV0dXJuIHZhbHVlICE9PSAnJwogICAgICB9LAogICAgICB2YWxpZGF0ZUlucHV0VHlwZSA6IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHsKICAgICAgICByZXR1cm4ga2V5ID09PSAibmFtZSIgPyB0aGlzLmlzVmFsaWROYW1lKHZhbHVlKSA6IHRoaXMuaXNWYWxpZEdyYWRlKHZhbHVlKQogICAgICB9LAogICAgICBpc0Zvcm1WYWxpZDogZnVuY3Rpb24oKSB7CiAgICAgICAgICBsZXQgaXNWYWxpZCA9IHRydWU7CiAgICAgICAgICAKICAgICAgICAgIFsibmFtZSJdLmNvbmNhdCh0aGlzLnN1YmplY3RzKS5mb3JFYWNoKCBrZXkgPT4gewogICAgICAgICAgICAgICAgbGV0IHZhbHVlID0gdGhpcy5mb3JtRGF0YVtrZXldCiAgICAgICAgICAgICAgICBpc1ZhbGlkID0gaXNWYWxpZCAmJiAhdGhpcy5pc1ByaXN0aW5lKHZhbHVlKSAmJiB0aGlzLnZhbGlkYXRlSW5wdXRUeXBlKGtleSwgdmFsdWUpCiAgICAgICAgICB9KQogICAgICAgICAgcmV0dXJuIGlzVmFsaWQKICAgICAgfSwKICAgICAgaXNCZXN0R1BBOiBmdW5jdGlvbihncGEpIHsKICAgICAgICAgIHJldHVybiBncGEgPT09IHRoaXMuYmVzdEdQQQogICAgICB9LAogICAgICBpc1dvcnN0R1BBOiBmdW5jdGlvbihncGEpIHsKICAgICAgICAgIHJldHVybiBncGEgPT09IHRoaXMud29yc3RHUEEKICAgICAgfSwKICAgICAgcmVzZXRCZXN0QW5kV29yc3Q6IGZ1bmN0aW9uKCl7CiAgICAgICAgICB0aGlzLmJlc3RHUEEgPSAwCiAgICAgICAgICB0aGlzLndvcnN0R1BBID0gNAogICAgICB9LAogICAgICBwZXJzaXN0QmVzdEFuZFdvcnN0OiBmdW5jdGlvbihncGEpIHsKICAgICAgICBpZihncGEgPiB0aGlzLmJlc3RHUEEgKSB7CiAgICAgICAgICAgIHRoaXMuYmVzdEdQQSA9IGdwYQogICAgICAgIH0KICAgICAgICBpZihncGEgPCB0aGlzLndvcnN0R1BBICkgewogICAgICAgICAgICB0aGlzLndvcnN0R1BBID0gZ3BhCiAgICAgICAgfQogICAgICB9LAogICAgICBtYWtlU3R1ZGVudDogZnVuY3Rpb24oZm9ybURhdGEpIHsKICAgICAgICAgIGNvbnN0IGZvcm1hdHRlZEdyYWRlcyA9IHRoaXMuc3ViamVjdHMubWFwKCBzdWJqZWN0ID0+IGAke3N1YmplY3R9IC0gJHtmb3JtRGF0YVtzdWJqZWN0XS50b1VwcGVyQ2FzZSgpfWApCiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIF9pZCA6IHRoaXMuc3R1ZGVudHMubGVuZ3RoICsgMSwKICAgICAgICAgICAgICBuYW1lOiBmb3JtRGF0YS5uYW1lLAogICAgICAgICAgICAgIGdwYTogY2FsY3VsYXRlR1BBKGZvcm1hdHRlZEdyYWRlcyksCiAgICAgICAgICAgICAgZ3JhZGVNYXAgOmdldEdyYWRlTWFwKGZvcm1hdHRlZEdyYWRlcykKICAgICAgICAgIH0KICAgICAgfSwKICAgICAgYWRkU3R1ZGVudDogZnVuY3Rpb24oKSB7CiAgICAgICAgICBjb25zdCBzdHVkZW50ID0gdGhpcy5tYWtlU3R1ZGVudCh0aGlzLmZvcm1EYXRhKQogICAgICAgICAgdGhpcy5zdHVkZW50cy5wdXNoKHN0dWRlbnQpCiAgICAgICAgICB0aGlzLnBlcnNpc3RCZXN0QW5kV29yc3Qoc3R1ZGVudC5ncGEpCiAgICAgIH0sCiAgICAgIHJlbW92ZVN0dWRlbnQ6IGZ1bmN0aW9uKGlkKSB7CiAgICAgICAgICB0aGlzLnN0dWRlbnRzID0gdGhpcy5zdHVkZW50cy5maWx0ZXIoc3R1ZGVudCA9PiBzdHVkZW50Ll9pZCAhPT0gaWQpCiAgICAgICAgICB0aGlzLnJlc2V0QmVzdEFuZFdvcnN0KCkKICAgICAgICAgIHRoaXMuc3R1ZGVudHMubWFwKCBzdHVkZW50ID0+IHRoaXMucGVyc2lzdEJlc3RBbmRXb3JzdChzdHVkZW50LmdwYSkgKQogICAgICB9CiAgfSwKICBkYXRhOiAoKSA9PiAoewogICAgZm9ybURhdGE6IHtuYW1lOm51bGwsIE1hdGg6IG51bGwsIEhpc3Rvcnk6IG51bGwsIFNjaWVuY2U6IG51bGwsIEVuZ2xpc2g6IG51bGx9LAogICAgc3ViamVjdHM6IFsnTWF0aCcsICdIaXN0b3J5JywgJ1NjaWVuY2UnLCAnRW5nbGlzaCddLAogICAgYmVzdEdQQTogMCwKICAgIHdvcnN0R1BBOiA0LAogICAgc3R1ZGVudHM6IFsKICAgICAgewogICAgICAgIF9pZDogMSwKICAgICAgICBuYW1lOiAiQWRhbSIsCiAgICAgICAgZ3JhZGVzOiBbIk1hdGggLSBBIiwgIkhpc3RvcnkgLSBCIiwgIlNjaWVuY2UgLSBBIiwgIkVuZ2xpc2ggLSBCIl0sCiAgICAgICAgaW1nOiAiaHR0cHM6Ly9pLnByYXZhdGFyLmNjLzMwMCIsCiAgICAgICAgZ2VuZGVyOiAiTSIsCiAgICAgICAgYmlydGhkYXk6ICJKdWx5IDIzLCAyMDAzIiwKICAgICAgICBhdGhsZXRlOiB0cnVlLAogICAgICAgIGdyYWRlOiAxMAogICAgICB9LAogICAgICB7CiAgICAgICAgX2lkOiAyLAogICAgICAgIG5hbWU6ICJKb2huIiwKICAgICAgICBncmFkZXM6IFsiTWF0aCAtIEIiLCAiSGlzdG9yeSAtIEIiLCAiU2NpZW5jZSAtIEIiLCAiRW5nbGlzaCAtIEIiXSwKICAgICAgICBpbWc6ICJodHRwczovL2kucHJhdmF0YXIuY2MvMzAwIiwKICAgICAgICBnZW5kZXI6ICJNIiwKICAgICAgICBiaXJ0aGRheTogIlNlcHRlbWJlciA4LCAyMDA1IiwKICAgICAgICBhdGhsZXRlOiBmYWxzZSwKICAgICAgICBncmFkZTogOAogICAgICB9LAogICAgICB7CiAgICAgICAgX2lkOiAzLAogICAgICAgIG5hbWU6ICJTYXJhaCIsCiAgICAgICAgZ3JhZGVzOiBbIk1hdGggLSBDIiwgIkhpc3RvcnkgLSBCIiwgIlNjaWVuY2UgLSBCIiwgIkVuZ2xpc2ggLSBDIl0sCiAgICAgICAgaW1nOiAiaHR0cHM6Ly9pLnByYXZhdGFyLmNjLzMwMCIsCiAgICAgICAgZ2VuZGVyOiAiRiIsCiAgICAgICAgYmlydGhkYXk6ICJKYW51YXJ5IDE3LCAyMDA0IiwKICAgICAgICBhdGhsZXRlOiBmYWxzZSwKICAgICAgICBncmFkZTogOQogICAgICB9LAogICAgICB7CiAgICAgICAgX2lkOiA0LAogICAgICAgIG5hbWU6ICJLYXRpZSIsCiAgICAgICAgZ3JhZGVzOiBbIk1hdGggLSBEIiwgIkhpc3RvcnkgLSBCIiwgIlNjaWVuY2UgLSBDIiwgIkVuZ2xpc2ggLSBCIl0sCiAgICAgICAgaW1nOiAiaHR0cHM6Ly9pLnByYXZhdGFyLmNjLzMwMCIsCiAgICAgICAgZ2VuZGVyOiAiRiIsCiAgICAgICAgYmlydGhkYXk6ICJPY3RvYmVyIDYsIDIwMDUiLAogICAgICAgIGF0aGxldGU6IHRydWUsCiAgICAgICAgZ3JhZGU6IDgKICAgICAgfSwKICAgICAgewogICAgICAgIF9pZDogNSwKICAgICAgICBuYW1lOiAiUGhpbCIsCiAgICAgICAgZ3JhZGVzOiBbIk1hdGggLSBGIiwgIkhpc3RvcnkgLSBCIiwgIlNjaWVuY2UgLSBDIiwgIkVuZ2xpc2ggLSBEIl0sCiAgICAgICAgaW1nOiAiaHR0cHM6Ly9pLnByYXZhdGFyLmNjLzMwMCIsCiAgICAgICAgZ2VuZGVyOiAiTSIsCiAgICAgICAgYmlydGhkYXk6ICJBdWd1c3QgMTMsIDIwMDEiLAogICAgICAgIGF0aGxldGU6IGZhbHNlLAogICAgICAgIGdyYWRlOiAxMgogICAgICB9CiAgICBdLm1hcCggc3R1ZGVudCA9PiB0b1NpbXBsaWZpZWRTdHVkZW50KHN0dWRlbnQpKQogIH0pLAogIGNyZWF0ZWQ6IGZ1bmN0aW9uICgpIHsKICAgIHRoaXMuc3R1ZGVudHMuZm9yRWFjaCggc3R1ZGVudCA9PiB0aGlzLnBlcnNpc3RCZXN0QW5kV29yc3Qoc3R1ZGVudC5ncGEpKQogIH0sCiAgcHJvcHM6IHt9Cn07Cg=="},{"version":3,"sources":["StudentInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"StudentInfo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div style=\"margin:10px\">\n        <h2>Student Performance</h2>\n        <div class=\"form-inline\" role=\"form\" style=\"flex-flow:row nowrap\">\n            <div class=\"form-group mb1\">\n                <label v-bind:for=\"'name'\" class=\"sr-only\">Name</label>\n                <input v-bind:type=\"'text'\" maxlength=\"20\" v-bind:id=\"'name'\" v-bind:name=\"'name'\" class=\"form-control\" v-bind:class=\"getValidationClass('name')\" v-bind:placeholder=\"'Enter Name'\" v-model=\"formData['name']\"/>\n            </div>\n            <div class=\"form-group mb2\" v-for=\"(subject,index) in subjects\" v-bind:key=\"index\">\n                <label v-bind:for=\"subject\" class=\"sr-only\">{{subject}}</label>\n                <input v-bind:type=\"'text'\" maxlength=\"1\" v-bind:id=\"subject\" v-bind:name=\"subject\" class=\"form-control\" v-bind:class=\"getValidationClass(subject)\" v-bind:placeholder=\"'Enter '+subject\" v-model=\"formData[subject]\"/>\n            </div>\n            <div class=\"form-group mb1\">\n                <button type=\"button\" :disabled='!isFormValid()' class=\"btn btn-primary\" @click=\"addStudent\">Add Student</button>\n            </div>        \n        </div>\n        <table class=\"table table-striped table-dark\">\n        <thead>\n            <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\" v-for=\"(subject,index) in subjects\" v-bind:key=\"index\">{{subject}}</th>\n            <th scope=\"col\">GPA</th>\n            <th></th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr v-for=\"(student,index) in students\" v-bind:key=\"student._id\" v-bind:class=\"getBestWorstClasses(student)\">\n            <th scope=\"row\">{{index+1}}</th>\n            <td>{{student.name}}</td>\n            <td scope=\"row\" v-for=\"(subject,index) in subjects\" v-bind:key=\"index\">{{student.gradeMap[subject]}}</td>\n            <td>{{student.gpa}}</td>\n            <td><button @click=\"removeStudent(student._id)\">Remove</button></td>\n            </tr>\n        </tbody>\n        </table>\n    </div>\n</template>\n\n<style>\n    tr.best-gpa > td, tr.best-gpa > th {\n        color: black;\n    }\n\n    tr.worst-gpa > td, tr.worst-gpa > th {\n        color:black;\n    }\n\n    .form-inline .form-group {\n        flex: 1 1 auto;\n        margin:10px;\n    }\n\n    .form-inline .form-control {\n        width: 100%;\n    }\n\n    .form-group button {\n        white-space: nowrap;\n    }\n\n    @media (min-width: 576px) {\n         .form-inline .form-control {\n            width: 100%;\n        }   \n    }\n</style>\n\n<script>\n\nlet extractGrade = (gradeDescription) => {\n          let gradeMap = {\n              A: 4,\n              B: 3,\n              C: 2,\n              D: 1,\n              F: 0 \n          }\n          let index = gradeDescription.length - 1\n          return gradeMap[gradeDescription.charAt(index)]\n      }\n\nlet calculateGPA = (grades) => {\n    let total = 0;\n    grades.forEach( grade => {\n        total += extractGrade(grade);\n    })\n    return total / grades.length\n}\n\nlet getGradeMap = (grades) => {\n          let map = {}\n          grades.forEach( gradeDesc => {\n            const end = gradeDesc.indexOf(\" \")\n            const subject = gradeDesc.substring(0,end)\n            const grade = gradeDesc.charAt(gradeDesc.length - 1)\n            map[subject] = grade\n          })\n\n          return map\n        //   return {\n        //       Math: 'A',\n        //       History: 'B',\n        //       Science: 'A',\n        //       English: 'B'\n        //   }\n}\n\nlet toSimplifiedStudent = (student) => {\n    return {\n        _id: student._id,\n        name: student.name,\n        gpa: calculateGPA(student.grades),\n        gradeMap: getGradeMap(student.grades)\n    }\n}\n\nexport default {\n  name: \"StudentInfo\",\n  methods: {\n      getBestWorstClasses: function(student) {\n          if(this.isBestGPA(student.gpa) && this.isWorstGPA(student.gpa)) {\n              return ''\n          } else if(this.isBestGPA(student.gpa)) {\n             return 'best-gpa bg-success'\n          } else if (this.isWorstGPA(student.gpa)){\n             return 'worst-gpa bg-danger'\n          }\n        \n      },\n      getValidationClass: function(column) {\n        return !this.isPristine(this.formData[column]) ? (this.validateInputType(column, this.formData[column]) ? 'is-valid' : 'is-invalid') : ''\n      },\n      isPristine: function(value) {\n          return value == null\n      },\n      isValidGrade: function(value) {\n          return ['A','B','C','D','F'].indexOf(value.toUpperCase()) > -1\n      },\n      isValidName: function(value) {\n          return value !== ''\n      },\n      validateInputType : function(key, value) {\n        return key === \"name\" ? this.isValidName(value) : this.isValidGrade(value)\n      },\n      isFormValid: function() {\n          let isValid = true;\n          \n          [\"name\"].concat(this.subjects).forEach( key => {\n                let value = this.formData[key]\n                isValid = isValid && !this.isPristine(value) && this.validateInputType(key, value)\n          })\n          return isValid\n      },\n      isBestGPA: function(gpa) {\n          return gpa === this.bestGPA\n      },\n      isWorstGPA: function(gpa) {\n          return gpa === this.worstGPA\n      },\n      resetBestAndWorst: function(){\n          this.bestGPA = 0\n          this.worstGPA = 4\n      },\n      persistBestAndWorst: function(gpa) {\n        if(gpa > this.bestGPA ) {\n            this.bestGPA = gpa\n        }\n        if(gpa < this.worstGPA ) {\n            this.worstGPA = gpa\n        }\n      },\n      makeStudent: function(formData) {\n          const formattedGrades = this.subjects.map( subject => `${subject} - ${formData[subject].toUpperCase()}`)\n          return {\n              _id : this.students.length + 1,\n              name: formData.name,\n              gpa: calculateGPA(formattedGrades),\n              gradeMap :getGradeMap(formattedGrades)\n          }\n      },\n      addStudent: function() {\n          const student = this.makeStudent(this.formData)\n          this.students.push(student)\n          this.persistBestAndWorst(student.gpa)\n      },\n      removeStudent: function(id) {\n          this.students = this.students.filter(student => student._id !== id)\n          this.resetBestAndWorst()\n          this.students.map( student => this.persistBestAndWorst(student.gpa) )\n      }\n  },\n  data: () => ({\n    formData: {name:null, Math: null, History: null, Science: null, English: null},\n    subjects: ['Math', 'History', 'Science', 'English'],\n    bestGPA: 0,\n    worstGPA: 4,\n    students: [\n      {\n        _id: 1,\n        name: \"Adam\",\n        grades: [\"Math - A\", \"History - B\", \"Science - A\", \"English - B\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"M\",\n        birthday: \"July 23, 2003\",\n        athlete: true,\n        grade: 10\n      },\n      {\n        _id: 2,\n        name: \"John\",\n        grades: [\"Math - B\", \"History - B\", \"Science - B\", \"English - B\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"M\",\n        birthday: \"September 8, 2005\",\n        athlete: false,\n        grade: 8\n      },\n      {\n        _id: 3,\n        name: \"Sarah\",\n        grades: [\"Math - C\", \"History - B\", \"Science - B\", \"English - C\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"F\",\n        birthday: \"January 17, 2004\",\n        athlete: false,\n        grade: 9\n      },\n      {\n        _id: 4,\n        name: \"Katie\",\n        grades: [\"Math - D\", \"History - B\", \"Science - C\", \"English - B\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"F\",\n        birthday: \"October 6, 2005\",\n        athlete: true,\n        grade: 8\n      },\n      {\n        _id: 5,\n        name: \"Phil\",\n        grades: [\"Math - F\", \"History - B\", \"Science - C\", \"English - D\"],\n        img: \"https://i.pravatar.cc/300\",\n        gender: \"M\",\n        birthday: \"August 13, 2001\",\n        athlete: false,\n        grade: 12\n      }\n    ].map( student => toSimplifiedStudent(student))\n  }),\n  created: function () {\n    this.students.forEach( student => this.persistBestAndWorst(student.gpa))\n  },\n  props: {}\n};\n</script>\n\n<style scoped>\n</style>"]}]}